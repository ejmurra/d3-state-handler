0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.12.1
3 info using node@v0.12.7
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/Users/emurray/WebstormProjects/d3-state',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory /Users/emurray/.npm/d3-state-handler/0.4.2/package.tgz not in flight; packing
10 verbose tar pack [ '/Users/emurray/.npm/d3-state-handler/0.4.2/package.tgz',
10 verbose tar pack   '/Users/emurray/WebstormProjects/d3-state' ]
11 verbose tarball /Users/emurray/.npm/d3-state-handler/0.4.2/package.tgz
12 verbose folder /Users/emurray/WebstormProjects/d3-state
13 info prepublish d3-state-handler@0.4.2
14 verbose unsafe-perm in lifecycle true
15 verbose addLocalTarball adding from inside cache /Users/emurray/.npm/d3-state-handler/0.4.2/package.tgz
16 silly cache afterAdd d3-state-handler@0.4.2
17 verbose afterAdd /Users/emurray/.npm/d3-state-handler/0.4.2/package/package.json not in flight; writing
18 verbose afterAdd /Users/emurray/.npm/d3-state-handler/0.4.2/package/package.json written
19 silly publish { name: 'd3-state-handler',
19 silly publish   version: '0.4.2',
19 silly publish   description: 'A module for managing states allowing users to toggle between d3 charts.',
19 silly publish   main: 'lib/d3-state-handler.js',
19 silly publish   repository:
19 silly publish    { type: 'git',
19 silly publish      url: 'git+https://github.com/ejmurra/d3-state-handler.git' },
19 silly publish   scripts:
19 silly publish    { test: 'node ./node_modules/intern/bin/intern-client config=tests/intern',
19 silly publish      prepublish: 'gulp publish' },
19 silly publish   babel: { plugins: [ 'lodash' ] },
19 silly publish   author: { name: 'Eli Murray' },
19 silly publish   license: 'MIT',
19 silly publish   dependencies: {},
19 silly publish   devDependencies:
19 silly publish    { amdclean: '^2.7.0',
19 silly publish      'babel-plugin-lodash': '^0.2.0',
19 silly publish      gulp: '^3.9.0',
19 silly publish      'gulp-babel': '^5.3.0',
19 silly publish      'gulp-rename': '^1.2.2',
19 silly publish      'gulp-sourcemaps': '^1.6.0',
19 silly publish      'gulp-uglify': '^1.4.2',
19 silly publish      intern: '^3.0.6',
19 silly publish      requirejs: '^2.1.20' },
19 silly publish   readme: '# d3-state-handler\n#### v0.3.x\nA thin data-layer for creating kick-ass d3 stories.\n\n### How does it work?\nd3-state-handler won\'t make charts for you, nor will it tell you how to display them. Instead, it allows you to register different states (read charts) and call hooks as you transfer between states. This allows you to act on your data between charts making it easy to transition between them. It also supports hooks for jumping to specific charts via urls. For a demonstration, see [the demo](http://github.com/ejmurra/d3-state-demo).\n\n### Installation\nd3-state-handler can be installed with npm. `npm install --save d3-state-handler`\n\n### Usage\nd3-state-handler is _no longer_ an amd module. ~~To use it, you\'ll need [requirejs](https://github.com/jrburke/requirejs).~~ But you can still use requirejs if you want to.\n\n## API\n\n### constructor(options)\nThis is the method first called on d3-state-handler. It takes an options object with the following properties (shown with defaults):\n\n```javascript\n{\n  /* \n   * Data is shared between states. Every state method recieves a data parameter, this \n   * specifies the the data passed in to stateHandler.start() when it is first called.\n  */\n  data: {},\n  /*\n   * Specifies whether lastChart.next() goes to first chart and whether\n   * firstChart.prev() calls the last chart.\n  */\n  loop: true, // Currently impossible to turn off.\n  /*\n   * Calling jumpTo() instead of next() or previous() allows you to go to any chart\n   * from any other chart. Doing this is tricky if you don\'t take special care to clean\n   * up your state before you jump. Setting this control object allows you to create a\n   * contract that all states must adhere to when calling jumpOut on the state.\n  */\n  jumpState: {} // Currently unimplemented.\n}\n```\n\n### StateHandler.add(state)\nAdds a new state. See states section below.\n\n### StateHandler.next()\nTransitions to the next chart. Calls `nextOut(data)` on the current chart, `nextIn(data)` on the next chart, and then `render(data)` on the new current chart.\n\n### StateHandler.prev()\nTransitions to the previous chart. Calls `prevOut(data)` on the current chart, `prevIn(data)` on the next chart, and then `render(data)` on the new current chart.\n\n### StateHandler.remove(name)\nRemoves a state by name.\n\n### StateHandler.resize()\nCalls `resize(data)` on the current state. Defaults to `render(data)` if resize is undefined.\n\n### StateHandler.jumpTo(name)\nJumps from current state to a different state by name. Calls `jumpOut(data)` on current state, checks that `data === jumpState` (not yet implemented), calls `jumpIn(data)` on the target state, and then calls `render(data)` on the new current state.\n\n### StateHandler.start()\nCalls render on the current state.\n\n### StateHandler.currentState()\nReturns the current state object.\n\n## States\nStates are the building blocks for d3 stories created with d3-state-handler. States must have a `render` method but all other methods are optional. All methods receive a data object as the first parameter and must return a data object. See the example state below.\n\n```javascript\n{\n  name: [String], // Name of the state. Defaults to the index of the state\n  render: function(data) {\n    // Create chart based on data here.\n    return data;\n  },\n  nextOut: function(data) {\n    // Clean up data here before passing it to the next state.\n    return data;\n  },\n  prevOut: function(data) {\n    // Clean up data here before passing it to the previous state.\n    return data;\n  },\n  nextIn: function(data) {\n    // Manipulate data to prepare it for this.render(data). Called when \n    // StateHandler.next() is called on the state before this one.\n    return data;\n  },\n  prevIn: function(data) {\n    // Manipulate data to prepare it for this.render(data). Called when\n    // StateHandler.prev() is called on the state after this one.\n    return data;\n  },\n  jumpOut: function(data) {\n    // Clean up data to match the jumpState contract specified in \n    // the constructor.\n    return data;\n  },\n  jumpIn: function(data) {\n    // Manipulate data to prepare it for this.render(data). It is safe\n    // to assume data here is exactly what was specified in the \n    // jumpState contract. \n    // (Actually, I lied. That\'s not a safe assumption to make.) \n    // (It will be by version 1.0.0, however.)\n    return data;\n  },\n  resize: function(data) {\n    // Do some checks about screen size here and manipulate the state if you\n    // need to. This is called when StateHandler.resize() is called.\n    // StateHandler.resize() defaults to calling render(data) if this\n    // function is unimplemented.\n    return data;\n  }\n}\n```\n',
19 silly publish   readmeFilename: 'README.md',
19 silly publish   gitHead: 'c650e6e288dd53683fb42b54f6e9bc8fb484db7d',
19 silly publish   bugs: { url: 'https://github.com/ejmurra/d3-state-handler/issues' },
19 silly publish   homepage: 'https://github.com/ejmurra/d3-state-handler#readme',
19 silly publish   _id: 'd3-state-handler@0.4.2',
19 silly publish   _shasum: '0a2c748bae92b0f5bf745d3cbd894e98411e5e26',
19 silly publish   _from: '.' }
20 verbose getPublishConfig undefined
21 silly mapToRegistry name d3-state-handler
22 silly mapToRegistry using default registry
23 silly mapToRegistry registry https://registry.npmjs.org/
24 silly mapToRegistry uri https://registry.npmjs.org/d3-state-handler
25 verbose publish registryBase https://registry.npmjs.org/
26 silly publish uploading /Users/emurray/.npm/d3-state-handler/0.4.2/package.tgz
27 verbose request uri https://registry.npmjs.org/d3-state-handler
28 verbose request sending authorization for write operation
29 info attempt registry request try #1 at 11:22:13
30 verbose request using bearer token for auth
31 verbose request id c2c6b678ed637338
32 http request PUT https://registry.npmjs.org/d3-state-handler
33 http 403 https://registry.npmjs.org/d3-state-handler
34 verbose headers { 'content-type': 'application/json',
34 verbose headers   'cache-control': 'max-age=60',
34 verbose headers   'content-length': '95',
34 verbose headers   'accept-ranges': 'bytes',
34 verbose headers   date: 'Tue, 20 Oct 2015 15:22:09 GMT',
34 verbose headers   via: '1.1 varnish',
34 verbose headers   connection: 'keep-alive',
34 verbose headers   'x-served-by': 'cache-jfk1029-JFK',
34 verbose headers   'x-cache': 'MISS',
34 verbose headers   'x-cache-hits': '0',
34 verbose headers   'x-timer': 'S1445354528.471591,VS0,VE829' }
35 verbose request invalidating /Users/emurray/.npm/registry.npmjs.org/d3-state-handler on PUT
36 error publish Failed PUT 403
37 verbose stack Error: "You cannot publish over the previously published version 0.4.2." : d3-state-handler
37 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
37 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
37 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:197:22)
37 verbose stack     at Request.emit (events.js:110:17)
37 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1050:14)
37 verbose stack     at Request.emit (events.js:129:20)
37 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:996:12)
37 verbose stack     at IncomingMessage.emit (events.js:129:20)
37 verbose stack     at _stream_readable.js:908:16
37 verbose stack     at process._tickCallback (node.js:355:11)
38 verbose statusCode 403
39 verbose pkgid d3-state-handler
40 verbose cwd /Users/emurray/WebstormProjects/d3-state
41 error Darwin 14.4.0
42 error argv "node" "/usr/local/bin/npm" "publish"
43 error node v0.12.7
44 error npm  v2.12.1
45 error code E403
46 error "You cannot publish over the previously published version 0.4.2." : d3-state-handler
47 error If you need help, you may report this error at:
47 error     <https://github.com/npm/npm/issues>
48 verbose exit [ 1, true ]
